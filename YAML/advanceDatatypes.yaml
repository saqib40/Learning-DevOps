#list
student: !!seq
 - marks
 - name
 - roll no

# or like this
cities: [new delhi, mumbai]

# some of the keys of seq can be empty
# called sparse sequence
sparse seq:
 - hey
 - how
 - 
 - Null
 - sup

#nested sequence, don't complicate it simple way to visualise it's to see the yml-json converter
-
 - mango
 - orange
 - banana
-
 - marks
 - roll no
 - date

# maps; key value pairs are called maps
!!map #used for this
# nested mapping; map within a map
name: Saqib
role:
  age: 78
  job: student
# same as
 role: { age: 78, job: student }

#pairs; keys may have duplicate values
# used as !!pairs
pair examples: !!pairs
 - job: student
 - job: teacher
# this will be an array of hash table; can be visualised by converting to json

# same as
pair examples: !!pairs [job: student, job: teacher]

# opposite, !!set will allow you to have unique values
names: !!set
 ? Kunal
 ? Saqib
 ? Rohit

# dictionary !!omap, for sequence to be value
people: !!omap
  - Kunal:
     name: Kunal
     age: 78
     height: 678
  - Rahul:
     name: Rahul Op
     age: 13
     height: 456

# reusing some properties using anchors(&) and aliases(*)
likings: &likes
 fav fruit: mango
 dislikes: grapes

person1:
 name: Saqib
 <<: *likes

person2:
 name: Aqib
 <<: *likes
 dislikes: berries #overwritten